#include <stdio.h>
#include <stdlib.h>

int insertionSort(int nums[], int tamanhoNums);
int ordenaVetor(int tamanhoNums);

int insertionSort(int nums[], int tamanhoNums)
{
    int i, j, aux;
    for (int i = 1; i < tamanhoNums; i++) {
        aux = nums[i];
        j = i - 1;
        while (j >= 0 && nums[j] > aux) {
            nums[j + 1] = nums[j];
            j = j - 1;
        }
        nums[j + 1] = aux;
	 }
	return *nums;
}

int *ordenaVetorTemporario(int tamanhoNums){
	int *numsTemporario = malloc(tamanhoNums * sizeof(int));
    int valorTemporario = 0;
	for(int i = 0; i <= tamanhoNums; i++){
		numsTemporario[i] = valorTemporario;
		valorTemporario++;
    }
	return numsTemporario;
	}


int main(){

	int saida;
	int flag = 0;
	int i;

	int nums[] = {3, 0, 1};
	int tamanhoNums = sizeof(nums)/sizeof(nums[0]);
	*nums = insertionSort(nums, tamanhoNums);
	int *numsTemporario = ordenaVetorTemporario(tamanhoNums);
	for(int i = 0; i <=tamanhoNums; i++){
		printf("Vetor temporario[%d] = %d\n", i, numsTemporario [i]);
	} 

	for(i = 0; i < tamanhoNums; i++){
		if(numsTemporario[i] != nums[i]){
			flag = 1;
			saida = numsTemporario[i];
		}
	}
	if (flag == 0){
		return 0;
	} else {
	if(saida != '\0'){
	printf("O elemento que faltava no vetor era o numero %d\n", saida);
	}
	}
	free(numsTemporario);
	return (0);
}
